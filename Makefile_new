SRC := src
INC := include
BIN := bin
OBJ := obj

COMMONINC := /home/admin/github/common/include
COMMONSRC := /home/admin/github/common/src
commonsrcs = $(wildcard $(COMMONSRC)/*.cpp)
commonobjs = $(patsubst %.cpp, $(OBJ)/%.o, $(notdir $(commonsrcs)))
commondeps = $(commonobjs:%.o=%.d)

srcs = $(wildcard $(SRC)/*.cpp)
objs = $(patsubst %.cpp, $(OBJ)/%.o, $(notdir $(srcs)))
deps = $(objs:%.o=%.d)

TARGET := test

CC := g++
CCFLAGS := -I$(INC)
CCFLAGS += -I$(COMMONINC)
LDFLAGS := -lboost_system -lboost_thread -ljsoncpp -ltinyxml 
CCFLAGS += $(LDFLAGS)

vpath %.h $(INC)
vpath %.cpp $(SRC)

all : common dep $(BIN)/$(TARGET)

common :
$(OBJ)/%.d : $(COMMONSRC)/%.cpp
	@set -e;
	@rm -f $@;
	@$(CC) -MM $< $(CCFLAGS) > $@.temp;
	@sed 's,\($*\)\.o[ :]*,$(OBJ)/\1.d : ,g' < $@.temp >> $@;
	@sed 's,\($*\)\.o[ :]*,$(OBJ)/\1.o : ,g' < $@.temp >> $@;
	@echo -e "\t"$(CC) -c $< -g -o $(subst .d,.o,$@) $(CCFLAGS) >> $@;
	@rm -f $@.temp;


dep :
$(OBJ)/%.d : $(SRC)/%.cpp
	@set -e;
	@rm -f $@;
	@$(CC) -MM $< $(CCFLAGS) > $@.temp;
	@sed 's,\($*\)\.o[ :]*,$(OBJ)/\1.d : ,g' < $@.temp >> $@;
	@sed 's,\($*\)\.o[ :]*,$(OBJ)/\1.o : ,g' < $@.temp >> $@;
	@echo -e "\t"$(CC) -c $< -g -o $(subst .d,.o,$@) $(CCFLAGS) >> $@;
	@rm -f $@.temp;

$(BIN)/$(TARGET) : $(objs) $(commonobjs)
	$(CC) -g -o $(BIN)/$(TARGET) $^ $(CCFLAGS);
	@echo Target: ./$(BIN)/$(TARGET) Done

include $(commondeps)
include $(deps)

.PHONY : info
info :
	@echo $(srcs);
	@echo $(objs);
	@echo $(deps);
	@echo $(CCFLAGS);
	@echo $(commonsrcs);
	@echo $(commonobjs);
	@echo $(commondeps);

.PHONY : clean
clean :
	-rm -rf $(OBJ)/* $(BIN)/$(TARGET);

	
